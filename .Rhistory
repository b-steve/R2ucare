# definition des melanges
Mp = t(M[,(nj+1):nk])
# calcul des coefficients du melanges
res = coef_mixtures(Mp,Np)
Q = res$P
P = res$PI
A = res$GAM
Q = rbind(P,Q)
# calcul des valeurs attendues
theoriques = matrix(rep(totk,ni),byrow=T,nrow=ni) * t(Q)
# calcul du nombre de degres de liberte
df = (nk-nj)*(ni-nj)
# test LR
tempchi2 = gof_test(1,c(M),c(theoriques))
table_multi_mitec[i-1,1] = i
table_multi_mitec[i-1,2] = tempchi2
table_multi_mitec[i-1,3] = df
table_multi_mitec[i-1,4] = 1-pchisq(tempchi2,df)
table_multi_mitec[i-1,5] = 'Chi-square'
} else {
table_multi_mitec[i-1,1] = i
table_multi_mitec[i-1,2] = 0
table_multi_mitec[i-1,3] = 0
table_multi_mitec[i-1,4] = 0
table_multi_mitec[i-1,5] = 'None'
};tempchi2
install_github('oliviergimenez/R2ucare')
geese = system.file("extdata", "sooty.inp", package = "R2ucare")
geese = read_inp(geese)
# Get encounter histories and number of individuals with corresponding histories
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
# perform TestM.ITEC
testMitec(geese.hist,geese.freq)
geese = system.file("extdata", "sooty.inp", package = "R2ucare")
geese = read_inp(geese)
# Get encounter histories and number of individuals with corresponding histories
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
# perform TestM.ITEC
testMitec(geese.hist,geese.freq)
geese = system.file("extdata", "sooty.inp", package = "R2ucare")
geese = read_inp(geese)
# Get encounter histories and number of individuals with corresponding histories
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
# perform TestM.ITEC
testMitec(geese.hist,geese.freq)
geese = system.file("extdata", "sooty.inp", package = "R2ucare")
geese = read_inp(geese)
# Get encounter histories and number of individuals with corresponding histories
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
# perform TestM.ITEC
testMitec(geese.hist,geese.freq)
geese = system.file("extdata", "sooty.inp", package = "R2ucare")
geese = read_inp(geese)
# Get encounter histories and number of individuals with corresponding histories
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
# perform TestM.ITEC
testMitec(geese.hist,geese.freq)
geese = system.file("extdata", "sooty.inp", package = "R2ucare")
geese = read_inp(geese)
# Get encounter histories and number of individuals with corresponding histories
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
# perform TestM.ITEC
testMitec(geese.hist,geese.freq)
geese = system.file("extdata", "sooty.inp", package = "R2ucare")
geese = read_inp(geese)
# Get encounter histories and number of individuals with corresponding histories
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
# perform TestM.ITEC
testMitec(geese.hist,geese.freq)
geese = system.file("extdata", "sooty.inp", package = "R2ucare")
geese = read_inp(geese)
# Get encounter histories and number of individuals with corresponding histories
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
# perform TestM.ITEC
testMitec(geese.hist,geese.freq)
install_github('oliviergimenez/R2ucare')
geese = system.file("extdata", "sooty.inp", package = "R2ucare")
geese = read_inp(geese)
# Get encounter histories and number of individuals with corresponding histories
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
# perform TestM.ITEC
testMitec(geese.hist,geese.freq)
geese = system.file("extdata", "sooty.inp", package = "R2ucare")
geese = read_inp(geese)
# Get encounter histories and number of individuals with corresponding histories
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
# perform TestM.ITEC
testMitec(geese.hist,geese.freq)
geese = system.file("extdata", "sooty.inp", package = "R2ucare")
geese = read_inp(geese)
# Get encounter histories and number of individuals with corresponding histories
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
# perform TestM.ITEC
testMitec(geese.hist,geese.freq)
geese = system.file("extdata", "sooty.inp", package = "R2ucare")
geese = read_inp(geese)
# Get encounter histories and number of individuals with corresponding histories
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
# perform TestM.ITEC
testMitec(geese.hist,geese.freq)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = read_inp(geese)
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
test3Gwbwa(geese.hist,geese.freq)
test3Gsr(geese.hist,geese.freq)
test3Gsm(geese.hist,geese.freq)
testMitec(geese.hist,geese.freq)
testMltec(geese.hist,geese.freq)
library(R2ucare)
library(R2ucare)
library(R2ucare)
?test2ct
library(R2ucare)
?test2ct
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
install.packages('roxygen2', repos='http://cran.us.r-project.org')
install.packages('devtools', repos='http://cran.us.r-project.org')
install_github('oliviergimenez/R2ucare')
library("devtools")
install_github('oliviergimenez/R2ucare')
install.packages('sp', repos='http://cran.us.r-project.org')
install.packages('rgdal', repos='http://cran.us.r-project.org')
install.packages('testthat', repos='http://cran.us.r-project.org')
devtools::use_testthat()
library(R2ucare)
?test2cl
dipper = system.file("extdata", "ed.inp", package = "R2ucare")
dipper = read_inp(dipper,group.df=data.frame(sex=c('Male','Female')))
# Get encounter histories, counts and groups:
dip.hist = dipper$encounter_histories
dip.freq = dipper$sample_size
dip.group = dipper$groups
# split the dataset in males/females
mask = (dip.group == 'Female')
dip.fem.hist = dip.hist[mask,]
dip.fem.freq = dip.freq[mask]
mask = (dip.group == 'Male')
dip.mal.hist = dip.hist[mask,]
dip.mal.freq = dip.freq[mask]
# for males
X = dip.mal.hist
freq = dip.mal.freq
res.males = test2cl(X,freq)
res.males
res.males
res.males$test2cl
res.males$test2cl
res.males$test2cl
res.males$test2cl==c(0,0,1)
dipper = system.file("extdata", "ed.inp", package = "R2ucare")
dipper = read_inp(dipper,group.df=data.frame(sex=c('Male','Female')))
dip.hist = dipper$encounter_histories
dip.freq = dipper$sample_size
dip.group = dipper$groups
mask = (dip.group == 'Male')
dip.mal.hist = dip.hist[mask,]
dip.mal.freq = dip.freq[mask]
X = dip.mal.hist
freq = dip.mal.freq
res.males = test2cl(X,freq)
expect_equal(res.males$test2cl, c(0,0,1))
res.males$test2cl
install.packages('RUnit', repos='http://cran.us.r-project.org')
?expect_equal
res.males$test2cl
?test2ct
# read in the classical dipper dataset
dipper = system.file("extdata", "ed.inp", package = "R2ucare")
dipper = read_inp(dipper,group.df=data.frame(sex=c('Male','Female')))
# Get encounter histories, counts and groups:
dip.hist = dipper$encounter_histories
dip.freq = dipper$sample_size
dip.group = dipper$groups
# split the dataset in males/females
mask = (dip.group == 'Female')
dip.fem.hist = dip.hist[mask,]
dip.fem.freq = dip.freq[mask]
mask = (dip.group == 'Male')
dip.mal.hist = dip.hist[mask,]
dip.mal.freq = dip.freq[mask]
# for females
X = dip.fem.hist
freq = dip.fem.freq
res.females = test2ct(X,freq)
res.females
str(res.females)
str(res.females)
res.females$test2ct
?test3sr
dipper = system.file("extdata", "ed.inp", package = "R2ucare")
dipper = read_inp(dipper,group.df=data.frame(sex=c('Male','Female')))
dip.hist = dipper$encounter_histories
dip.freq = dipper$sample_size
dip.group = dipper$groups
mask = (dip.group == 'Male')
dip.mal.hist = dip.hist[mask,]
dip.mal.freq = dip.freq[mask]
res.males = test3sr(dip.mal.hist, dip.mal.freq)
res.males
str(res.males)
res.males$test3sr
test3sr(dip.mal.hist, dip.mal.freq)
?chisq.test
res.males$test3sr[1:3]
res.males$test3sr
res.males$test3sr[1]
?test3sm
dipper = system.file("extdata", "ed.inp", package = "R2ucare")
dipper = read_inp(dipper,group.df=data.frame(sex=c('Male','Female')))
dip.hist = dipper$encounter_histories
dip.freq = dipper$sample_size
dip.group = dipper$groups
mask = (dip.group == 'Female')
dip.fem.hist = dip.hist[mask,]
dip.fem.freq = dip.freq[mask]
res.females = test3sm(dip.fem.hist, dip.fem.freq)
str(res.females)
res.females$test3sm
?expect_error
dipper = system.file("extdata", "ed.inp", package = "R2ucare")
dipper = read_inp(dipper,group.df=data.frame(sex=c('Male','Female')))
dip.hist = dipper$encounter_histories
dip.freq = dipper$sample_size
dip.group = dipper$groups
mask = (dip.group == 'Male')
dip.mal.hist = dip.hist[mask,]
dip.mal.freq = dip.freq[mask]
res.males = test3sr(dip.mal.hist, dip.mal.freq)
test3sr(dip.mal.hist, dip.mal.freq)
test3sr(dip.mal.hist, dip.mal.freq)$details
library(R2ucare)
library(R2ucare)
?test3Gsm
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = read_inp(geese)
# Get encounter histories and number of individuals with corresponding histories
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
# perform Test.3.GSm
test3Gsm(geese.hist,geese.freq)
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = read_inp(geese)
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
res = test3Gsm(geese.hist,geese.freq)
str(res)
res$test3Gsm
?test3Gsr
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = read_inp(geese)
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
res = test3Gsr(geese.hist,geese.freq)
str(res)
res
?test3Gwbwa
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = read_inp(geese)
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
res = test3Gwbwa(geese.hist,geese.freq)
res
?pchisq
pchisq
?fisher.test
?chisq.test
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
?test3Gsm
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = read_inp(geese)
# Get encounter histories and number of individuals with corresponding histories
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
# perform Test.3.GSm
test3Gsm(geese.hist,geese.freq)
?options
options(warn=2)
options(warn=0)
library(R2ucare)
dipper = system.file("extdata", "ed.inp", package = "R2ucare")
dipper = read_inp(dipper,group.df=data.frame(sex=c('Male','Female')))
dip.hist = dipper$encounter_histories
dip.freq = dipper$sample_size
dip.group = dipper$groups
mask = (dip.group == 'Male')
dip.mal.hist = dip.hist[mask,]
dip.mal.freq = dip.freq[mask]
res.males = test3sr(dip.mal.hist, dip.mal.freq)
library(R2ucare)
dipper = system.file("extdata", "ed.inp", package = "R2ucare")
dipper = read_inp(dipper,group.df=data.frame(sex=c('Male','Female')))
dip.hist = dipper$encounter_histories
dip.freq = dipper$sample_size
dip.group = dipper$groups
mask = (dip.group == 'Male')
dip.mal.hist = dip.hist[mask,]
dip.mal.freq = dip.freq[mask]
res.males = test3sr(dip.mal.hist, dip.mal.freq)
library(R2ucare)
dipper = system.file("extdata", "ed.inp", package = "R2ucare")
dipper = read_inp(dipper,group.df=data.frame(sex=c('Male','Female')))
dip.hist = dipper$encounter_histories
dip.freq = dipper$sample_size
dip.group = dipper$groups
mask = (dip.group == 'Male')
dip.mal.hist = dip.hist[mask,]
dip.mal.freq = dip.freq[mask]
res.males = test3sr(dip.mal.hist, dip.mal.freq)
?chisq.test
x <- matrix(c(12, 5, 7, 7), ncol = 2)
chisq.test(x)
x <- matrix(c(12, 5, 7, 7), ncol = 2)
res=chisq.test(x)
res
str(res)
res2=chisq.test(x, simulate.p.value = TRUE)
str(res2)
res$statistic
res2$statistic
library(R2ucare)
?testMitec
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = read_inp(geese)
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
res=testMitec(geese.hist,geese.freq)
res
str(res)
res$testMitec
?testMltec
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = read_inp(geese)
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
res = testMltec(geese.hist, geese.freq)
res
?testMitec
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = read_inp(geese)
# Get encounter histories and number of individuals with corresponding histories
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
# perform TestM.ITEC
testMitec(geese.hist,geese.freq)
?expect_equivalent
library(testthat)
?expect_equivalent
all.equal(tan(d45), rep(1, 10), tolerance = 0)  # to see difference
expect_equivalent(res$testMitec, c(68.224,27,0),tolerance=0.1)
all.equal(pi, 355/113)
# not precise enough (default tol) > relative error
d45 <- pi*(1/4 + 1:10)
stopifnot(
all.equal(tan(d45), rep(1, 10)))          # TRUE, but
all      (tan(d45) == rep(1, 10))         # FALSE, since not exactly
all.equal(tan(d45), rep(1, 10), tolerance = 0)  # to see difference
all.equal(tan(d45), rep(1, 10))
tan(d45)
rep(1, 10)
all.equal(c(68.224,27,0),c(68.225,27,0))
expect_equivalent(c(68.224,27,0),c(68.225,27,0))
expect_equivalent(c(68.224,27,0),c(68.225,27,0),tol=0.1)
expect_equivalent(c(68.224,27,0),c(68.225,27,0),toleranceol=0.1)
expect_equivalent(c(68.224,27,0),c(68.225,27,0),tolerance=0.1)
expect_equal(c(68.224,27,0),c(68.225,27,0),tolerance=0.1)
expect_equal(c(68.224,27,0),c(68.225,27,0))
expect_equal(c(68.224,27,0),c(68.225,27,0),tol=0.01)
res$testMitec
geese = system.file("extdata", "geese.inp", package = "R2ucare")
geese = read_inp(geese)
geese.hist = geese$encounter_histories
geese.freq = geese$sample_size
res = testMitec(geese.hist,geese.freq)
res
?  skip_on_cran
library(R2ucare)
?read_headed
library(R2ucare)
?read_headed
library(R2ucare)
# # read in text file as described at pages 50-51 in http://www.phidot.org/software/mark/docs/book/pdf/app_3.pdf
library(RMark)
# # read in text file as described at pages 50-51 in http://www.phidot.org/software/mark/docs/book/pdf/app_3.pdf
library(RMark)
data_path <- "/Library/Frameworks/R.framework/Versions/3.4/Resources/library/RMark/extdata/"
dipper <- import.chdata(paste0(data_path,"dipper.txt"),field.names=c("ch","sex"),header=FALSE)
head(dipper)
dipper <- as.data.frame(table(capt.hist))
dipper <- as.data.frame(table(dipper))
str(dipper)
dip.hist = matrix(as.numeric(unlist(strsplit(as.character(dipper$ch),""))),nrow=length(dipper$ch),byrow=T)
dip.freq = dipper$Freq
dip.group = dipper$sex
# # read in text file as described at pages 50-51 in http://www.phidot.org/software/mark/docs/book/pdf/app_3.pdf
library(RMark)
data_path <- "/Library/Frameworks/R.framework/Versions/3.4/Resources/library/RMark/extdata/"
dipper <- import.chdata(paste0(data_path,"dipper.txt"),field.names=c("ch","sex"),header=FALSE)
head(dipper)
dipper <- as.data.frame(table(dipper))
str(dipper)
dip.hist = matrix(as.numeric(unlist(strsplit(as.character(dipper$ch),""))),nrow=length(dipper$ch),byrow=T)
dip.freq = dipper$Freq
dip.group = dipper$sex
dip.hist = dipper$encounter_histories
dip.freq = dipper$sample_size
dip.group = dipper$groups
head(dip.hist)
head(dip.freq)
head(dip.group)
dip.hist = matrix(as.numeric(unlist(strsplit(as.character(dipper$ch),""))),nrow=length(dipper$ch),byrow=T)
dip.freq = dipper$Freq
dip.group = dipper$sex
head(dip.hist)
head(dip.freq)
head(dip.group)
dipper = system.file("extdata", "ed.inp", package = "R2ucare")
dipper = read_inp(dipper,group.df=data.frame(sex=c('Male','Female')))
head(dipper)
dip.hist = dipper$encounter_histories
dip.freq = dipper$sample_size
dip.group = dipper$groups
head(dip.hist)
head(dip.freq)
head(dip.group)
dipper = system.file("extdata", "ed.txt", package = "R2ucare")
read_headed(dipper)
dipper = system.file("extdata", "ed.txt", package = "R2ucare")
read_headed(dipper)
dipper = system.file("extdata", "ed.txt", package = "R2ucare")
read_headed(dipper)
dip.hist = dipper$encounter_histories
dipper <- system.file("extdata", "ed.txt", package = "R2ucare")
dipper <- read_headed(dipper)
dip.hist <- dipper$encounter_histories
dip.freq <- dipper$sample_size
dip.group <- dipper$groups
head(dip.hist)
head(dip.freq)
head(dip.group)
library(R2ucare)
vignette('vignette_R2ucare')
vignette('vignette_R2ucare')
vignette('vignette_R2ucare')
vignette('vignette_R2ucare')
vignette(vignette_R2ucare)
vignette('vignette_R2ucare')
devtools::build()
library(R2ucare)
library(R2ucare)
vignette('vignette_R2ucare')
devtools::use_vignette("vignette_R2ucare")
library(R2ucare)
vignette('vignette_R2ucare')
R CMD build R2ucare
CMD build R2ucare
library(R2ucare)
vignette('vignette_R2ucare')
library(R2ucare)
vignette('vignette_R2ucare')
library(R2ucare)
library(R2ucare)
library(R2ucare)
library(R2ucare)
vignette('vignette_R2ucare')
